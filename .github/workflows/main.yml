name: ThinkAlike CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      docs_changed: ${{ steps.filter.outputs.docs }}
      backend_changed: ${{ steps.filter.outputs.backend }}
      frontend_changed: ${{ steps.filter.outputs.frontend }}
    steps:
      - uses: actions/checkout@v3
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            docs:
              - 'docs/**'
              - '**.md'
            backend:
              - '**.py'
              - 'requirements.txt'
              - 'app/**'
            frontend:
              - 'frontend/**'

  backend:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.backend_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort pytest pytest-cov
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint and test backend
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          black --check .
          pytest --cov=./ --cov-report=xml

  frontend:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.frontend_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'
          cache-dependency-path: 'frontend/package-lock.json'
      - name: Install dependencies
        run: |
          cd frontend
          npm ci
      - name: Run tests and lint
        run: |
          cd frontend
          npm run lint
          npm test -- --watchAll=false

  docs:
    needs: detect_changes
    if: ${{ needs.detect_changes.outputs.docs_changed == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'
      - name: Install markdownlint
        run: npm install -g markdownlint-cli
      - name: Run markdownlint
        run: markdownlint "**/*.md" --ignore node_modules
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Build documentation
        run: |
          pip install mkdocs mkdocs-material
          mkdocs build

  deploy:
    needs: [backend, frontend, docs]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./site
