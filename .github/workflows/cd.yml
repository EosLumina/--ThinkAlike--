name: Continuous Deployment
'on':
  push:
    branches:
    - main
  pull_request:
    branches:
    - main
  workflow_dispatch: {}
true:
  push:
    branches:
    - main
  workflow_dispatch: null
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch')
    environment: staging
    steps:
    - uses: actions/checkout@v3
    - name: Set up SSH for staging
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.STAGING_SSH_KEY }}
    - name: Deploy to staging
      run: "# Using secrets properly in environment variables\necho \"Deploying to\
        \ staging environment\"\nssh -o StrictHostKeyChecking=no ${{ secrets.STAGING_USERNAME\
        \ }}@${{ secrets.STAGING_HOST }} '\n  cd /path/to/staging/app &&\n  git pull\
        \ &&\n  npm install &&\n  npm run build &&\n  pm2 restart all\n'\n"
    - name: Verify Deployment
      run: 'echo "Verifying staging deployment..."

        curl -s -o /dev/null -w "%{http_code}" ${{ secrets.STAGING_URL }} | grep 200

        echo "Staging deployment verified!"

        '
  deploy-production:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'workflow_dispatch'
    environment: production
    steps:
    - uses: actions/checkout@v3
    - name: Set up SSH for production
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.PROD_SSH_KEY }}
    - name: Deploy to production
      run: "# Using secrets properly in environment variables\necho \"Deploying to\
        \ production environment\"\nssh -o StrictHostKeyChecking=no ${{ secrets.PROD_USERNAME\
        \ }}@${{ secrets.PROD_HOST }} '\n  cd /path/to/production/app &&\n  git pull\
        \ &&\n  npm install &&\n  npm run build &&\n  pm2 restart all\n'\n"
    - name: Verify Deployment
      run: 'echo "Verifying production deployment..."

        curl -s -o /dev/null -w "%{http_code}" ${{ secrets.PROD_URL }} | grep 200

        echo "Production deployment verified!"

        '
