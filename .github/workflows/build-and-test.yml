name: Build and Test

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  actions_variables: read

jobs:
  backend_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"
      - name: Echo Python Version
        run: python --version
      - name: Install Python dependencies
        run: |
          set -e
          echo "Installing Python dependencies..."
          python -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install -r requirements-test.txt
          pip install pymdown-extensions httpx
      - name: Remove null bytes from source files
        run: |
          set -e
          echo "Cleaning backend files..."
          find backend/ -type f -exec sed -i 's/\x0//g' {} \;
      - name: Run Backend tests
        run: |
          set -e
          echo "Running backend tests..."
          cd backend
          pytest --maxfail=5 --disable-warnings -q

  frontend_tests:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        node-version: ["18.x"]
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - name: Install Frontend dependencies
        run: |
          set -e
          echo "Installing Frontend dependencies..."
          cd frontend
          npm ci
      - name: Build Frontend (if applicable)
        run: |
          set -e
          echo "Building Frontend..."
          cd frontend
          npm run build || echo "No build script defined, skipping"
      - name: Run Frontend tests
        run: |
          set -e
          echo "Running Frontend tests..."
          cd frontend
          npm test

  echo_completion:
    runs-on: ubuntu-latest
    needs: [backend_tests, frontend_tests]
    steps:
      - run: echo "All tests have completed successfully."
