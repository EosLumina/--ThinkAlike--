# .github/workflows/ci.yml
name: ThinkAlike CI

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch: # Allow manual trigger

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Use latest major version

      - name: Set up Python
        uses: actions/setup-python@v5 # Use latest major version
        with:
          python-version: '3.10' # Or your project's version
          cache: 'pip'

      - name: Install lint dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort # Add other linters if needed

      - name: Run Python Linters
        run: |
          echo "Running Flake8..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          echo "Running Black check..."
          black . --check
          echo "Running isort check..."
          isort . --check-only

      # Add frontend linting steps if applicable (e.g., ESLint)
      # - name: Set up Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '18' # Or your project's version
      #     cache: 'npm'
      # - name: Install Node dependencies
      #   run: npm ci # Assuming package-lock.json exists
      # - name: Run ESLint
      #   run: npm run lint # Assuming a lint script exists in package.json

  test-backend:
    name: Test Backend (Python)
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov # Add other test deps
          # Install main dependencies - adjust path if needed
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f backend/requirements.txt ]; then pip install -r backend/requirements.txt; fi

      - name: Run Python tests with coverage
        run: |
          # Adjust path to tests and source code as needed
          pytest --cov=. --cov-report=xml --cov-report=term
        # Optionally upload coverage
      # - name: Upload coverage reports to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     token: ${{ secrets.CODECOV_TOKEN }} # Optional: Requires Codecov setup
      #     files: ./coverage.xml

  # Add test-frontend job if applicable
  # test-frontend:
  #   name: Test Frontend (JS/TS)
  #   needs: lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: '18'
  #         cache: 'npm'
  #     - name: Install Node dependencies
  #       run: npm ci
  #     - name: Run frontend tests
  #       run: npm test # Assuming a test script exists
