[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "thinkalike"
version = "0.1.0"
description = "ThinkAlike - Digital Liberation Technology"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
dependencies = [
    "fastapi>=0.104.1",
    "uvicorn>=0.24.0",
    "sqlalchemy>=2.0.23",
    "pydantic>=2.4.2",
    "python-dotenv>=1.1.0",
    "python-jose>=3.4.0",
    "passlib>=1.7.4",
    "psycopg2-binary>=2.9.6",
    "python-multipart>=0.0.6",
    "markdown>=3.8",  # Added from requirements.txt/workflow
    "jinja2>=3.1.6",  # Added from requirements.txt/workflow
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "httpx>=0.24.0",
    "coverage>=7.0.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.0.0",
    "pymdown-extensions>=10.0",
]
lint = [  # New group for linters
    "flake8>=6.0.0", # Added from workflow (using a reasonable minimum version)
    "yamllint>=1.37.0", # Added from requirements.txt
]

[tool.setuptools]
packages = ["backend"]
package-dir = {"backend" = "backend"}

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-v"
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
pythonpath = [".", "backend"]

[tool.mypy]
python_version = "3.10"
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true

[tool.flake8]
max-line-length = 88
extend-ignore = "E203"

[tool.coverage.run]
source = ["backend"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.pytest]
pythonpath = ["."]
testpaths = ["backend/tests"]
python_files = ["test_*.py"]
addopts = "-v --cov=backend"
